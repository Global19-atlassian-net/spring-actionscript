<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:custom="org.springextensions.actionscript.samples.stagewiring.components.components.*"
				xmlns:mx="http://www.adobe.com/2006/mxml"
				layout="vertical"
				horizontalAlign="left"
				applicationComplete="init()"
				viewSourceURL="srcview/index.html"
				xmlns:sas="org.springextensions.actionscript.context.support.*">
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;

			import org.springextensions.actionscript.context.support.FlexXMLApplicationContext;
			import org.springextensions.actionscript.samples.stagewiring.classes.ApplicationModel;
			import org.springextensions.actionscript.samples.stagewiring.classes.LabelTextFactory;
			import org.springextensions.actionscript.utils.ApplicationUtils;

			//!!!!!!!!!!!!!! ATTENTION !!!!!!!!!!!!!!!!!!!!!!!
			//
			// Don't forget to add this compiler argument to this project:
			// -keep-as3-metadata += Autowired
			// Otherwise the metadata for the autowiring won't be included
			//
			//!!!!!!!!!!!!!! ATTENTION !!!!!!!!!!!!!!!!!!!!!!!

			//anonymous code block to force compilation of the LabelTextFactory class
			{
				LabelTextFactory
			}

			[Bindable]
			public var repeaterDataProvider:ArrayCollection;

			private var _applicationContext:FlexXMLApplicationContext;

			private function init():void {
				var customMenuItem1:ContextMenuItem = new ContextMenuItem("Open application-context.xml");
				customMenuItem1.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function():void {
					navigateToURL(new URLRequest('application-context.xml'));
				});
				ApplicationUtils.application.contextMenu.customItems.push(customMenuItem1);

				_applicationContext = new FlexXMLApplicationContext("application-context.xml");
				_applicationContext.addEventListener(Event.COMPLETE, complete_handler);
				_applicationContext.load();
			}

			private function complete_handler(event:Event):void {
				_applicationContext.removeEventListener(Event.COMPLETE, complete_handler);
				repeaterDataProvider = new ArrayCollection([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);
			}

			private function populateModel():void {
				var model:ApplicationModel = _applicationContext.getObject("modelInstance") as ApplicationModel;
				var products:ArrayCollection = new ArrayCollection(['Product 1', 'Product 2', 'Product 3', 'Product 4', 'Product 5', 'Product 6']);
				model.products = products;
			}
		]]>
	</mx:Script>
	<custom:AutowiredLabelWiredByType width="400"
									  height="30"/>
	<custom:AutowiredLabelWiredByName width="400"
									  height="30"/>
	<custom:AutowiredLabelWiredByPropertyName width="400"
											  height="30"/>
	<custom:AutowiredLabelWithDefinition width="400"
										 height="30"
										 name="autowiredLabel"/>
	<custom:AutowiredLabelWithExplicitName width="400"
										   height="30"/>
	<mx:HBox>
		<custom:AutoBindingCombobox width="400"
									height="35"/>
		<mx:Button id="btnPopulate"
				   label="Populate model"
				   click="populateModel()"/>
	</mx:HBox>
	<mx:HRule width="100%"/>
	<mx:Repeater id="factoryRepeater"
				 dataProvider="{this.repeaterDataProvider}">
		<custom:RepeaterLabel height="30"/>
	</mx:Repeater>
</mx:Application>
