<?xml version="1.0" encoding="utf-8"?>
<mx:Application
	xmlns:mx="http://www.adobe.com/2006/mxml"
	layout="vertical" horizontalAlign="left" creationComplete="init()" preinitialize="initMemberShipData()" viewSourceURL="srcview/index.html">
	<mx:Script>
		<![CDATA[
        import org.springextensions.actionscript.security.AccessStrategy;
        import org.springextensions.actionscript.security.MembershipAccessData;
        import org.springextensions.actionscript.security.SimpleSecurityManagerFactory;
        import org.springextensions.actionscript.security.SimpleStageSecurityManager;
        import org.springextensions.actionscript.context.support.FlexXMLApplicationContext;
        import org.springextensions.actionscript.samples.security.DemoUser;
        import org.springextensions.actionscript.security.SimpleMembershipOwner;
        import org.springextensions.actionscript.security.SimpleSecurityStageProcessor;

        private var _membershipData:Dictionary;
        [Bindable]
        private var _currentUser:DemoUser;
        private var _applicationContext:FlexXMLApplicationContext;

        private function initMemberShipData():void {

            //Here, for the sake of brevity, we create the membershipdata manually,
            //in a 'real-world' situation this information is probably stored in either
            //a configuration file or is loaded from a database using remote methods

            _membershipData = new Dictionary();
            //Here we associate the right called 'canUsePrivilegedButton1' with the Button with id btnPrivilegedButton1:
            var mo:MembershipAccessData = new MembershipAccessData();
            mo.rights.push("canUsePrivilegedButton1");
            mo.accessStrategy = AccessStrategy.ENABLED;
            _membershipData["btnPrivilegedButton1"] = mo;

            //Here we associate the right called 'canUsePrivilegedButton2' with the Button with id btnPrivilegedButton2:
            mo = new MembershipAccessData();
            mo.rights.push("canUsePrivilegedButton2");
            mo.accessStrategy = AccessStrategy.VISIBLE;
            _membershipData["btnPrivilegedButton2"] = mo;

            //Here we associate the right called 'canEditTextArea' with the TextArea with id taPriviligedTextArea:
            mo = new MembershipAccessData();
            mo.rights.push("canEditTextArea");
            mo.accessStrategy = AccessStrategy.EDITABLE;
            _membershipData["taPriviligedTextArea"] = mo;

            //Here we associate the right called 'canSeeLabel' with the Label with id lblPrivilegedLabel:
            mo = new MembershipAccessData();
            mo.rights.push("canSeeLabel");
            mo.accessStrategy = AccessStrategy.HIDE;
            _membershipData["lblPrivilegedLabel"] = mo;

            //Here we associate the right called 'canEditTextInput' with the TextInput with id tiPriviligedTextInput:
            mo = new MembershipAccessData();
            mo.rights.push("canEditTextInput");
            mo.accessStrategy = AccessStrategy.EDITABLE;
            _membershipData["tiPriviligedTextInput"] = mo;

        }

        private function init():void {
            _applicationContext = new FlexXMLApplicationContext("application-context.xml");
            _applicationContext.addEventListener(Event.COMPLETE, complete_handler);
            _applicationContext.load();
        }

        private function createUser():void {
            _currentUser = new DemoUser();
            //This is where we give the current user the right to click the btnPrivilegedButton1 and btnPrivilegedButton2, etc, by giving it
            //the appropriate rights
            _currentUser.rights.push("canUsePrivilegedButton1");
            _currentUser.rights.push("canUsePrivilegedButton2");
            _currentUser.rights.push("canEditTextArea");
            _currentUser.rights.push("canSeeLabel");

            //To let the factory know there's an IMembershipOwner that needs to be evaluated by the ISecurityManagers
            //we assign the current user to the factory
            var sm:SimpleSecurityStageProcessor = _applicationContext.getObject("securityProcessor") as SimpleSecurityStageProcessor;
            sm.securityManagerFactory.membershipOwner = _currentUser;
        }

        private function killUser():void {
            var sm:SimpleSecurityStageProcessor = _applicationContext.getObject("securityProcessor") as SimpleSecurityStageProcessor;
            sm.securityManagerFactory.membershipOwner = null;
        }

        private function expandUser():void {
            _currentUser.rights = _currentUser.rights.concat(['canEditTextInput']);
        }

        private function complete_handler(event:Event):void {
            _applicationContext.removeEventListener(Event.COMPLETE, complete_handler);

            //The stage processor is created, now assign the membership data (the component id's and its associated roles and rights) to
            //the SimpleMembershipManagerFactory
            var sm:SimpleSecurityStageProcessor = _applicationContext.getObject("securityProcessor") as SimpleSecurityStageProcessor;
            (sm.securityManagerFactory as SimpleSecurityManagerFactory).membershipData = _membershipData;

            mainStack.selectedIndex = 1;
        }

        {
            SimpleSecurityStageProcessor;
        }

		]]>
	</mx:Script>
	<mx:ViewStack id="mainStack" width="100%" height="100%">
		<mx:VBox width="100%" height="100%">
			<mx:Label text="Initializing..."/>
		</mx:VBox>
		<mx:VBox width="100%" height="100%">
			<mx:HBox>
				<mx:Button label="Simulate user login" click="createUser()"/>
				<mx:Button label="Simulate user logout" click="killUser()"/>
				<mx:VRule height="25"/>
				<mx:Button label="Add extra right to user to also be able to edit the TextInput" click="expandUser()" visible="{_currentUser!=null}"/>
			</mx:HBox>
			<mx:HRule/>
			<mx:Button id="btnPrivilegedButton1" enabled="false" label="Only logged in users can press me!"/>
			<mx:Button id="btnPrivilegedButton2" visible="false" label="Only logged in users can see me!"/>
			<mx:TextArea id="taPriviligedTextArea" editable="false" text="Only logged in users can edit me!"/>
			<mx:Label id="lblPrivilegedLabel" visible="false" includeInLayout="false" text="I only exist for logged in users!"/>
			<mx:TextInput id="tiPriviligedTextInput" editable="false" text="Only privileged users can edit me! And the demo user isn't one of them!"/>
		</mx:VBox>
	</mx:ViewStack>
</mx:Application>
