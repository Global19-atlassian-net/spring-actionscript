<?xml version="1.0" encoding="utf-8"?>
<BasicSASModule xmlns:code="org.springextensions.actionscript.samples.multiplemodules.*"
				xmlns="org.springextensions.actionscript.module.*"
				xmlns:mx="http://www.adobe.com/2006/mxml"
				creationComplete="initModule()"
				layout="vertical"
				horizontalAlign="left">
	<mx:Script>
		<![CDATA[
			import mx.core.IFlexModuleFactory;
			import mx.events.ModuleEvent;
			import mx.modules.ModuleLoader;
			import mx.modules.ModuleManager;

			import org.springextensions.actionscript.context.support.FlexXMLApplicationContext;
			import org.springextensions.actionscript.samples.multiplemodules.ModuleClass;
			import org.springextensions.actionscript.samples.multiplemodules.modules.*;
			import org.springextensions.actionscript.stage.DefaultAutowiringStageProcessor;

			private function initModule():void {

				var m:ModuleClass = new ModuleClass();
				var ap:DefaultAutowiringStageProcessor;

				moduleApplicationContext.addConfigLocation("module1-context.xml");
				moduleApplicationContext.addEventListener(Event.COMPLETE, complete_handler);
				moduleApplicationContext.load();
			}

			private function disposeContext(event:ModuleEvent):void {
				(event.target as ModuleLoader).removeEventListener(ModuleEvent.UNLOAD, disposeContext);
				moduleApplicationContext.dispose();
			}

			private function complete_handler(event:Event):void {
				moduleApplicationContext.removeEventListener(Event.COMPLETE, complete_handler);

			}

			private var _customClass:ModuleClass;

			[Autowired(mode="byType")]
			public function get customClass():ModuleClass {
				return _customClass;
			}

			public function set customClass(value:ModuleClass):void {
				if (value !== _customClass) {
					_customClass = value;
				}
			}
		]]>
	</mx:Script>
	<mx:Label fontSize="20"
			  text="MODULE #1"/>
	<mx:HBox>
		<code:InjectedTextLabel/>
	</mx:HBox>
</BasicSASModule>
