<?xml version="1.0"?>
<objects
	xmlns="http://www.springactionscript.org/schema/objects"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springactionscript.org/schema/objects http://www.springactionscript.org/schema/objects/spring-actionscript-objects-1.0.xsd">
  <!--
    Defines an instance of CSVMovieSource.
    The content of the source, the movies, is passed in as a constructor argument.
  -->
  <object id="csvMovieFinder" class="org.springextensions.actionscript.samples.movieapp.CSVMovieSource">
    <constructor-arg value="Reservoir Dogs,Quentin Tarantino,Pulp Fiction,Quentin Tarantino,Kill Bill,Quentin Tarantino,Batman,Tim Burton,Big Fish,Tim Burton,Corpse Bride,Tim Burton,Braveheart,Mel Gibson"/>
  </object>

  <!--
    Defines an instance of StaticMovieSource.
    The movies are defined inside the StaticMovieSource class, so no constructor arguments must be passed in and no
    properties must be defined.
  -->
  <object id="staticMovieSource" class="org.springextensions.actionscript.samples.movieapp.StaticMovieSource"/>

  <!--
    Defines an instance of MovieLister.
    In order to function properly, the movieLister must be given an instance of a moviesource to get movies from. This
    moviesource object is set on the movielister through the 'movieSource' property. The most important thing here is
    that the moviesource must implement the IMovieSource interface because the 'movieSource' property on the movieLister
    is typed to IMovieSource and not to a concrete implementation such as CSVMovieFinder or StaticMovieFinder. This
    allows us to change the movieSource "strategy" by referencing another moviesource implementation to the
    'movieSource' property.
  -->
  <object id="movieLister" class="org.springextensions.actionscript.samples.movieapp.MovieLister">
    <property name="movieSource">
      <!--<ref>staticMovieSource</ref>-->
      <ref>csvMovieFinder</ref>
    </property>
  </object>
</objects>
